{"version":3,"sources":["modules/three/module.ts","store.ts","components/theme.tsx","components/three/Controls.tsx","components/three/Ground.tsx","components/three/Frame.tsx","components/three/Drone.tsx","components/three/Sun.tsx","components/three/Orbit.tsx","components/three/ThreeRoot.tsx","components/Controller.tsx","components/DataDisplay.tsx","components/App.tsx","index.tsx"],"names":["initialState","stop","grabbing","time","stopDuration","flight","data","map","d","dronePosition","droneDelta","cameraPosition","cameraDelta","ThreeModule","createSlice","name","reducers","play","state","payload","updateByFrame","now","moment1","Array","from","reverse","find","moment2","rate","next","Vector3","before","toArray","add","negate","setCameraPosition","rootReducer","combineReducers","three","reducer","theme","createMuiTheme","palette","type","primary","main","secondary","error","red","A400","background","default","Controls","props","isControl","drone","updateCamera","controlsRef","useRef","useThree","camera","gl","useFrame","position","current","update","num","Number","toFixed","ref","args","domElement","target","enabled","enableDamping","enableRotate","enableZoom","enablePan","rotateSpeed","zoomSpeed","panSpeed","minDistance","maxDistance","minPolarAngle","maxPolarAngle","Math","PI","Ground","r","attach","color","_","i","x","panelCount","j","y","key","receiveShadow","Frame","performance","Drone","castShadow","extend","OrbitControls","Sun","Color","intensity","shadow-mapSize-width","shadow-mapSize-height","Orbit","vertices","ThreeRoot","dispatch","useDispatch","cp","useSelector","cameraOptions","fov","near","far","up","shadowMap","actions","equal","Controller","Box","left","style","transform","bottom","mb","p","bgcolor","borderRadius","display","flexDirection","justifyContent","alignItems","IconButton","onClick","DataDisplay","long","lat","elev","controllerWidth","width","top","mt","Typography","marginRight","store","middlewares","getDefaultMiddleware","thunk","configureStore","middleware","setupStore","App","React","useState","grab","setGrab","ThemeProvider","height","cursor","onMouseDown","onMouseUp","onMouseLeave","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.e2eb59e0.chunk.js","sourcesContent":["import { createSlice, PayloadAction as PA } from \"@reduxjs/toolkit\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../store\";\nimport { Vector3 } from \"three\";\nimport data from \"../../data/dummy.json\";\n\nexport interface ThreeState {\n  stop: boolean;\n  grabbing: boolean;\n  time: number;\n  stopDuration: number;\n  flight: [number, number, number, number][];\n  dronePosition: Parameters<THREE.Vector3[\"set\"]>;\n  droneDelta: Parameters<THREE.Vector3[\"set\"]>;\n  cameraPosition: Parameters<THREE.Vector3[\"set\"]>;\n  cameraDelta: Parameters<THREE.Vector3[\"set\"]>;\n}\n\nconst initialState: ThreeState = {\n  stop: false,\n  grabbing: false,\n  time: 0,\n  stopDuration: 0,\n  // 緯度35度基準\n  flight: data.map((d) => [\n    (d[0] - data[0][0]) * 91287.7885,\n    (d[1] - data[0][1]) * 110940.5844,\n    d[2],\n    d[3],\n  ]),\n  dronePosition: [0, 0, 0],\n  droneDelta: [0, 0, 0],\n  cameraPosition: [10, -8, 2],\n  cameraDelta: [2, -10, 5],\n};\n\nconst ThreeModule = createSlice({\n  name: \"three\",\n  initialState,\n  reducers: {\n    play: (state, { payload }: PA<boolean>) => {\n      return { ...state, stop: payload };\n    },\n    updateByFrame: (state, { payload: now }: PA<number>) => {\n      if (state.stop) {\n        return {\n          ...state,\n          stopDuration: now - state.time,\n          droneDelta: [0, 0, 0],\n        };\n      }\n      const time = now - state.stopDuration;\n      const moment1 = Array.from(state.flight)\n        .reverse()\n        .find((d) => d[3] < time);\n      const moment2 = state.flight.find((d) => time <= d[3]);\n      if (!moment1 || !moment2) {\n        return {\n          ...state,\n          stop: true,\n          stopDuration: now - state.time,\n          droneDelta: [0, 0, 0],\n        };\n      }\n      const rate = (time - moment1[3]) / (moment2[3] - moment1[3]);\n      const next = new Vector3(\n        moment1[0] + (moment2[0] - moment1[0]) * rate,\n        moment1[1] + (moment2[1] - moment1[1]) * rate,\n        moment1[2] + (moment2[2] - moment1[2]) * rate\n      );\n      const before = new Vector3(...state.dronePosition);\n      return {\n        ...state,\n        time,\n        dronePosition: next.toArray() as Parameters<THREE.Vector3[\"set\"]>,\n        droneDelta: next.add(before.negate()).toArray() as Parameters<\n          THREE.Vector3[\"set\"]\n        >,\n      };\n    },\n    setCameraPosition: (\n      state,\n      { payload }: PA<Parameters<THREE.Vector3[\"set\"]>>\n    ) => {\n      const next = new Vector3(...payload);\n      const before = new Vector3(...state.cameraPosition);\n      return {\n        ...state,\n        cameraPosition: next.toArray() as Parameters<THREE.Vector3[\"set\"]>,\n        cameraDelta: next.add(before.negate()).toArray() as Parameters<\n          THREE.Vector3[\"set\"]\n        >,\n      };\n    },\n  },\n});\n\nexport const useStop = (): boolean =>\n  useSelector((state: RootState) => state.three.stop);\n\nexport const useTime = (): number =>\n  useSelector((state: RootState) => state.three.time);\n\nexport const useCameraPosition = (): Parameters<THREE.Vector3[\"set\"]>[] =>\n  useSelector((state: RootState) => [\n    state.three.cameraPosition,\n    state.three.cameraDelta,\n  ]);\n\nexport const useDronePosition = (): Parameters<THREE.Vector3[\"set\"]>[] =>\n  useSelector((state: RootState) => [\n    state.three.dronePosition,\n    state.three.droneDelta,\n  ]);\n\nexport const useFlight = (): number[][] =>\n  useSelector((state: RootState) => state.three.flight);\n\nexport default ThreeModule;\n","import { combineReducers, configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n\nimport ThreeModule from './modules/three/module';\n\n\nexport const rootReducer = combineReducers({\n  three: ThreeModule.reducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>\n\nexport const setupStore = () => {\n  const middlewares = getDefaultMiddleware({thunk: false});\n\n  const store = configureStore({\n      reducer: rootReducer,\n      middleware: middlewares,\n  });\n\n  return store\n}","import red from \"@material-ui/core/colors/red\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    primary: {\n      main: \"#556cd6\",\n    },\n    secondary: {\n      main: \"#19857b\",\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: \"#fff\",\n    },\n  },\n});\n\nexport default theme;\n","import React, { useRef } from \"react\";\n// eslint-disable-next-line\nimport { extend, useThree, useFrame, ReactThreeFiber } from \"react-three-fiber\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { Vector3 } from \"three\";\n\nextend({ OrbitControls });\n\n// インターフェイスIntrinsicElementsにorbitControls の定義を追加\ndeclare global {\n  namespace JSX {\n    interface IntrinsicElements {\n      orbitControls: ReactThreeFiber.Node<OrbitControls, typeof OrbitControls>;\n    }\n  }\n}\n\ntype Props = {\n  isControl: boolean;\n  drone: Parameters<THREE.Vector3[\"set\"]>[];\n  updateCamera: (p: Parameters<THREE.Vector3[\"set\"]>) => void;\n};\n\nexport default function Controls(props: Props) {\n  const { isControl, drone, updateCamera } = props;\n  const controlsRef = useRef<OrbitControls>();\n  const { camera, gl } = useThree();\n\n  useFrame(() => {\n    camera.position.add(new Vector3(...drone[1]));\n    controlsRef.current?.update();\n    const cameraPosition = camera.position\n      .toArray()\n      .map((num) => Number(num.toFixed(6)));\n    updateCamera(cameraPosition as Parameters<THREE.Vector3[\"set\"]>);\n  });\n\n  return (\n    <orbitControls\n      ref={controlsRef}\n      args={[camera, gl.domElement]}\n      // lookAt\n      target={new Vector3(...drone[0])}\n      enabled={isControl}\n      enableDamping={true}\n      enableRotate={true}\n      enableZoom={true}\n      enablePan={false}\n      rotateSpeed={1.0}\n      zoomSpeed={1.0}\n      panSpeed={2.0}\n      minDistance={10}\n      maxDistance={200}\n      minPolarAngle={0}\n      maxPolarAngle={Math.PI}\n    />\n  );\n}\n","import React from \"react\";\nimport {} from \"react-three-fiber\";\n\nexport default function Ground() {\n  const panelCount = 10;\n  const r = 0.4;\n  return (\n    <>\n      <mesh position={[0, 0, 0]}>\n        <sphereGeometry attach=\"geometry\" args={[0.1, r, r]} />\n        <meshStandardMaterial attach=\"material\" color=\"black\" />\n      </mesh>\n      <mesh position={[3, 0, 0]}>\n        <sphereGeometry attach=\"geometry\" args={[0.1, r, r]} />\n        <meshStandardMaterial attach=\"material\" color=\"red\" />\n      </mesh>\n      <mesh position={[0, 3, 0]}>\n        <sphereGeometry attach=\"geometry\" args={[0.1, r, r]} />\n        <meshStandardMaterial attach=\"material\" color=\"green\" />\n      </mesh>\n      <mesh position={[0, 0, 3]}>\n        <sphereGeometry attach=\"geometry\" args={[0.1, r, r]} />\n        <meshStandardMaterial attach=\"material\" color=\"blue\" />\n      </mesh>\n      {[...Array(panelCount)].map((_, i) => {\n        const x = i - panelCount / 2;\n        return [...Array(panelCount)].map((_, j) => {\n          const y = j - panelCount / 2;\n          const color = (x + y) % 2 === 0 ? \"#333333\" : \"#222222\";\n          return (\n            <mesh\n              key={`${x}-${y}`}\n              position={[(x + 0.5) * 20, (y + 0.5) * 20, 0]}\n              receiveShadow\n            >\n              <planeGeometry attach=\"geometry\" args={[20, 20]} />\n              <meshStandardMaterial attach=\"material\" color={color} />\n            </mesh>\n          );\n        });\n      })}\n    </>\n  );\n}\n","import { useFrame } from \"react-three-fiber\";\n\ntype Props = { update: (now: number) => void };\n\nexport default function Frame(props: Props) {\n  const { update } = props;\n  useFrame(() => update(performance.now()));\n  return null;\n}\n","import React from \"react\";\n\ntype Props = {\n  dronePosition: Parameters<THREE.Vector3['set']>;\n};\n\nexport default function Drone(props: Props) {\n  const { dronePosition } = props;\n  return (\n    <mesh position={dronePosition} castShadow>\n      <sphereGeometry attach=\"geometry\" args={[0.1, 32, 32]} />\n      <meshStandardMaterial attach=\"material\" color=\"white\" />\n    </mesh>\n  );\n}\n","import React from \"react\";\nimport { Color } from \"three/src/math/Color\";\n\nexport default function Sun() {\n\n  return (\n    <>\n      <ambientLight\n        color={new Color(\"#FFFEF4\")}\n        intensity={0.2}\n      />\n      <directionalLight\n        castShadow\n        position={[2, 2, 5]}\n        color={new Color(\"#FFFEF4\")}\n        shadow-mapSize-width={1024}\n        shadow-mapSize-height={1024}\n      />\n    </>\n  );\n}\n","import React from \"react\";\nimport { Vector3 } from \"three\";\n\ntype Props = {\n  flight: number[][];\n}\n\nexport default function Orbit(props: Props) {\n  const { flight } = props;\n  \n  return (\n    <line>\n      <geometry\n        attach=\"geometry\"\n        vertices={flight.map(d => new Vector3(...d))}\n      />\n      <lineBasicMaterial attach=\"material\" color=\"#666\" />\n    </line>\n  );\n}\n","import React from 'react';\nimport { Vector3 } from 'three';\nimport { Canvas } from \"react-three-fiber\";\nimport equal from \"deep-equal\";\nimport Controls from './Controls';\nimport Ground from './Ground';\nimport ThreeModule, { useCameraPosition, useDronePosition, useFlight } from '../../modules/three/module';\nimport { useDispatch } from 'react-redux';\nimport Frame from './Frame';\nimport Drone from './Drone';\nimport Sun from './Sun';\nimport Orbit from './Orbit';\n\nexport default function ThreeRoot() {\n  const dispatch = useDispatch();\n  const cp = useCameraPosition()[0];\n  const drone = useDronePosition();\n  const flight = useFlight();\n\n  const update = (now: number) => {\n    dispatch(ThreeModule.actions.updateByFrame(now));\n  }\n\n  const updateCamera = (next: Parameters<THREE.Vector3['set']>) => {\n    if (!equal(cp, next)) {\n      dispatch(ThreeModule.actions.setCameraPosition(next));\n    }\n  }\n\n  const cameraOptions = {\n    fov: 50,\n    near: 5,\n    far: 100000,\n    position: new Vector3(...cp),\n    up: new Vector3(0, 0, 1),\n  };\n\n  return (\n    <Canvas\n      shadowMap\n      camera={cameraOptions}\n    >\n      <Frame update={update} />\n      <Controls\n        isControl={true}\n        drone={drone}\n        updateCamera={updateCamera}\n      />\n      <Ground />\n      <Sun />\n      <Orbit flight={flight} />\n      <Drone dronePosition={drone[0]} />\n    </Canvas>\n  );\n}\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Box, IconButton } from \"@material-ui/core\";\nimport Play from \"@material-ui/icons/PlayArrow\";\nimport Pause from \"@material-ui/icons/Pause\";\nimport ThreeModule, { useStop } from \"../modules/three/module\";\n\nexport default function Controller() {\n  const dispatch = useDispatch();\n  const stop = useStop();\n\n  const onClickPlay = () => {\n    dispatch(ThreeModule.actions.play(!stop));\n  };\n\n  return (\n    <Box\n      position=\"fixed\"\n      left=\"50vw\"\n      style={{ transform: \"translate3d(-50%, 0, 0)\" }}\n      bottom={0}\n      mb={2}\n      p={1}\n      bgcolor=\"#00000030\"\n      borderRadius={4}\n      display=\"flex\"\n      flexDirection=\"row\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n    >\n      <IconButton onClick={onClickPlay}>\n        {stop ? <Play /> : <Pause />}\n      </IconButton>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport { useTime } from \"../modules/three/module\";\nimport data from \"../data/dummy.json\";\n\nconst controllerWidth = 600;\nconst background =\n  \"linear-gradient(#00000015 0%, #00000020 20%, #00000025 50%, #00000020 80%, #00000015 100%)\";\n\nexport default function DataDisplay() {\n  const time = useTime();\n  const d = Array.from(data)\n    .reverse()\n    .find((d) => d[3] < time);\n  if (!d) return null;\n\n  const long = `${d[0].toFixed(6)}° E`;\n  const lat = `${d[1].toFixed(6)}° N`;\n  const elev = `${d[2].toFixed(2)}m`;\n\n  return (\n    <Box\n      position=\"fixed\"\n      left={`calc(50vw - ${controllerWidth / 2}px)`}\n      width={controllerWidth}\n      top={0}\n      mt={2}\n      style={{ background }}\n      color=\"#fff6\"\n      borderRadius={4}\n      display=\"flex\"\n      flexDirection=\"row\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n    >\n      <Typography style={{ marginRight: 16 }}>{`long: ${long}`}</Typography>\n      <Typography style={{ marginRight: 16 }}>{`lat: ${lat}`}</Typography>\n      <Typography style={{ marginRight: 16 }}>{elev}</Typography>\n      <Typography>{`${d[3]}ms`}</Typography>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline/CssBaseline\";\nimport Box from \"@material-ui/core/Box\";\n\nimport { setupStore } from \"../store\";\n\nimport theme from \"./theme\";\nimport ThreeRoot from \"./three/ThreeRoot\";\nimport Controller from \"./Controller\";\nimport DataDisplay from \"./DataDisplay\";\n\nconst store = setupStore();\n\nexport default function App() {\n  const [grab, setGrab] = React.useState<\"grab\" | \"grabbing\">(\"grab\");\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n\n        <Box\n          width=\"100vw\"\n          height=\"100vh\"\n          bgcolor=\"black\"\n          style={{ cursor: grab }}\n          onMouseDown={() => setGrab(\"grabbing\")}\n          onMouseUp={() => setGrab(\"grab\")}\n          onMouseLeave={() => setGrab(\"grab\")}\n        >\n          <ThreeRoot />\n        </Box>\n        <DataDisplay />\n        <Controller />\n      </ThemeProvider>\n    </Provider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}